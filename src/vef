#!/bin/bash

### vef usage Usage:help
#
# 	vef -p POLICY
#
# Define policies in /etc/vef/policies
#
###/doc

#%include argstore.sh bashout.sh autohelp.sh

set -euo pipefail

allargs="$(args_store "$@")"

# ---- TRACK VARS -----

POLICY="$(args_get "$allargs" "-p" 1)"
allargs="$(args_remove "$allargs" "-p" 1)"

POLICYDIR=/etc/vef/policies

#%include filemanip.sh application.sh

function main_applyrules {
	local dTABLE="$1"; shift
	local dCHAIN="$1"; shift
	local allrules="$1"; shift

	while read RULEDEF; do
		# AT this point, perl makes more sense
	done < <(echo "$allrules")
}

function convertrule {
	# [[table/]CHAIN] PORT[/TRANS] [SOURCE/DEST]
}

function main {
	local POLICYFILE="$(getpolicy "$POLICY")"

	local allpolicies="$(read_policies "$POLICYFILE")"
	local allrules="$(read_rules "$POLICYFILE")"

	while read POLICYDEF; do
		local dTABLE="$(policy_parts "$POLICYDEF" table)"
		local dCHAIN="$(policy_parts "$POLICYDEF" chain)"
		local dPOLICY="$(policy_parts "$POLICYDEF" policy)"

		initialize_chain "$dTABLE" "$dCHAIN"

		# read and apply relevant rules
		main_applyrules "$dTABLE" "$dCHAIN" "$allrules"

		# and apply policy

		fw_applypolicy "$dTABLE" "$dCHAIN" "$dPOLICY"
	done < <(echo "$allpolicies")
}
